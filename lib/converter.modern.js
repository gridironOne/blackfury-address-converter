import{stripHexPrefix as r,isValidChecksumAddress as e,toChecksumAddress as o}from"crypto-addr-codec";import{decode as c,fromWords as d,encode as n,toWords as t}from"bech32";const a={decoder:o=>{const c=r(o);if(!e(o,null)&&c!==c.toLowerCase()&&c!==c.toUpperCase())throw Error("Invalid address checksum");return Buffer.from(r(o),"hex")},encoder:r=>o(r.toString("hex"),null),name:"ETH"};function l(r){return e=>n(r,t(e))}const u=(r,e)=>{return{decoder:(o=e,r=>{const{prefix:e,words:n}=c(r);if(e!==o)throw Error("Unrecognised address format");return Buffer.from(d(n))}),encoder:l(e),name:r};var o},f=u("blackvaloper","blackvaloper"),s=r=>{let e=a.decoder(r);return f.encoder(e)},m=r=>{let e=f.decoder(r);return a.encoder(e)},i=u("black","black"),p=r=>{let e=a.decoder(r);return i.encoder(e)},h=r=>{let e=i.decoder(r);return a.encoder(e)};export{i as BLACK,f as BLACKV,a as ETH,h as blackfuryToEth,m as blackvToEth,p as ethToBlackfury,s as ethToBlackfuryv};
//# sourceMappingURL=converter.modern.js.map
